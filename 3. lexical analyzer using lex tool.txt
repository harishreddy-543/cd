%{
#include <stdio.h>
#include <string.h>

// List of keywords
char* keywords[] = {"int", "float", "if", "else", "while", "for", "return", "void"};
int isKeyword(char* word) {
    for (int i = 0; i < sizeof(keywords)/sizeof(keywords[0]); i++) {
        if (strcmp(word, keywords[i]) == 0)
            return 1;
    }
    return 0;
}
%}

%%

[ \t\n]+                  ; // Ignore whitespace

"//".*                    { printf("Single-line comment: %s\n", yytext); }

"/*"([^*]|\*+[^*/])*\*+"/"  { printf("Multi-line comment: %s\n", yytext); }

[0-9]+\.[0-9]+            { printf("Float constant: %s\n", yytext); }

[0-9]+                    { printf("Integer constant: %s\n", yytext); }

"=="|"!="|"<="|">="|"="|"+"|"-"|"*"|"/"|"%"|"&&"|"||"|"!"  {
                            printf("Operator: %s\n", yytext);
                        }

[(){};,]                  { printf("Delimiter: %s\n", yytext); }

[a-zA-Z_][a-zA-Z0-9_]*    {
                            if (isKeyword(yytext))
                                printf("Keyword: %s\n", yytext);
                            else
                                printf("Identifier: %s\n", yytext);
                        }

.                         { printf("Unknown symbol: %s\n", yytext); }

%%

int yywrap() {
    return 1;
}

int main() {
    printf("Enter source code (Ctrl+D to end):\n");
    yylex();
    return 0;
}
How to Compile and Run
bash
CopyEdit
lex lexical.l
gcc lex.yy.c -o lexer
./lexer
Input:
int main() {
    int a = 10;
    float b = 20.5;
    // This is a single-line comment
    /* This is
       a multi-line comment */
    if (a < b) {
        a = a + 1;
    }
    return 0;
}
