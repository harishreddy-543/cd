LEX Code: calc.l
lex
CopyEdit
%{
#include "y.tab.h"
%}

%%

[0-9]+              { yylval = atoi(yytext); return NUM; }
[+\-*/\n()]         { return yytext[0]; }
[ \t]               ; // ignore whitespace

%%

int yywrap() { return 1; }
YACC Code: calc.y
yacc
CopyEdit
%{
#include <stdio.h>
#include <stdlib.h>
%}

%token NUM
%left '+' '-'
%left '*' '/'

%%

S : E '\n' { printf("Result = %d\n", $1); }
  | S E '\n' { printf("Result = %d\n", $2); }
  ;

E : E '+' E   { $$ = $1 + $3; }
  | E '-' E   { $$ = $1 - $3; }
  | E '*' E   { $$ = $1 * $3; }
  | E '/' E   { 
        if ($3 == 0) {
            printf("Error: Divide by zero\n");
            exit(1);
        }
        $$ = $1 / $3; 
    }
  | '(' E ')' { $$ = $2; }
  | NUM       { $$ = $1; }
  ;

%%

int main() {
    printf("Enter expressions (Ctrl+D to stop):\n");
    yyparse();
    return 0;
}

int yyerror(char *s) {
    printf("Syntax Error: %s\n", s);
    return 0;
}

To Compile and Run All Programs:
lex file.l
yacc -d file.y
gcc lex.yy.c y.tab.c -o output
./output
